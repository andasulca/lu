1.
#include <iostream>
#include <ctime>

using namespace std;

int main()
{
    srand((unsigned int)time(NULL));
    int results[6];
    int x;

    for (int j = 0; j < 6; j++) {
        roll_again:
            x=int(rand()%64)+1;
            for (int j2 = 0; j2 < j; j2++) {
                if (results[j2] == x)
                    goto roll_again;
            }
        results[j] = x;
    }

    for (int i = 0; i < 6; i++)
        cout << results[i] << endl;
    return 0;
}
2. advanced level
#include <iostream>
#include <sstream>
#include <iterator>
#include <string>
#include <vector>
#include <iomanip>

using namespace std;

int main()
{
        int n;
        std::cin.clear();
        std::cin.sync();
        std::cout << "Enter natural n: " << std::endl;
        cin >> n;

        std::cin.clear();
        std::cin.sync();
        std::cout << "Enter first sequence: " << std::endl;
        ///////////////////////// Read integers from a single line
        std::string s;
        std::getline( std::cin, s );
        std::istringstream is( s );
        std::vector<int> v( ( std::istream_iterator<int>( is ) ), std::istream_iterator<int>() );
        ///////////////////////////////////////////////////////////////////////////

        ////fill array with previously input values. i - counts the array elements
        int i = 0;
        int masivs1[10000];
        for (int x : v)  {
            masivs1[i] = x;
            i++;
        }

        std::cin.clear();
        std::cin.sync();
        std::cout << "Enter second sequence: " << std::endl;
        ///////////////////////////////////////////////////////////////////////////
        std::getline( std::cin, s );
        std::istringstream is2( s );
        std::vector<int> v2( ( std::istream_iterator<int>( is2 ) ), std::istream_iterator<int>() );
        ///////////////////////////////////////////////////////////////////////////

        ////fill array with previously input values. i - counts the array elements
        i = 0;
        int masivs2[10000];
        for (int x2 : v2)  {
            masivs2[i] = x2;
            i++;
        }
        bool match = true;
        for (int c = 0; c < n; c++) {
            for (int c2 = 0; c2 < n; c2 ++) {
                if (masivs1[c] == masivs2[c2]) {
                    masivs1[c] = -1;
                    masivs2[c2] = -1;
                    break;
                }
                if (c2 == n - 1) {
                    match = false;
                }
            }
            if(!match) break;
        }

        if (match)
            cout << "YES" << endl;
        else
            cout << "NO" << endl;

    return 0;
}
3.
#include <iostream>
#include <iomanip>

using namespace std;

int main()
{
    int results[30][15];
    int counter[30][15];
    int x;
    for (int j = 0; j < 30; j++) {
        for (int j2 = 0; j2 < 15; j2++) {
            results[j][j2] = 0;
            counter[j][j2] = 0;
        }
    }
    int student = -1;
    int course = -1;
    int grade = -1;

    do {
        cin >> student >> course >> grade;
        if (student == 0 && course == 0 && grade == 0)
            break;
            results[student - 1][course - 1] = results[student - 1][course - 1] + grade;
            counter[student - 1][course - 1] = counter[student - 1][course - 1] + 1;
    } while (true);



    double outputGrade;
    for (int j = 0; j < 30; j++) {
            cout << j + 1 << ". student ";
        for (int j2 = 0; j2 < 15; j2++) {
            if (results[j][j2] == 0)
                cout << j2 + 1 << ". course n" << endl;
            else {
                cout << std::setprecision(7) << j2 + 1 << ". course " << (double)results[j][j2]/counter[j][j2] << endl;
            }
        }
    }
    return 0;
}